# Generated by Django 3.2.22 on 2023-10-26 22:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion

import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('conferences', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('hash', models.CharField(default=None, max_length=64, unique=True, validators=[users.models.validate_hash], verbose_name='hash')),
                ('person_type', models.CharField(choices=[('Normal', 'Normal'), ('Guest', 'Guest'), ('Sponsor', 'Sponsor'), ('Privileged', 'Privileged'), ('Organizer', 'Organizer')], default='Normal', max_length=20, verbose_name='person type')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True)),
                ('accepted', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organizations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dinner_day_1', models.BooleanField(default=False)),
                ('accommodation_day_1', models.BooleanField(default=False)),
                ('breakfast_day_2', models.BooleanField(default=False)),
                ('dinner_day_2', models.BooleanField(default=False)),
                ('accommodation_day_2', models.BooleanField(default=False)),
                ('breakfast_day_3', models.BooleanField(default=False)),
                ('dinner_day_3', models.BooleanField(default=False)),
                ('accommodation_day_3', models.BooleanField(default=False)),
                ('breakfast_day_4', models.BooleanField(default=False)),
                ('contact', models.TextField(help_text="We need some contact to you in case you didn't show up - for example your phone number.")),
                ('information', models.TextField(blank=True, default='', help_text='Here is where you can give us information about yourself that may be important during your trip.')),
                ('vegetarian', models.BooleanField(default=False)),
                ('payment_accepted', models.BooleanField(default=False)),
                ('shirt_size', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL')], default='S', max_length=5)),
                ('shirt_type', models.CharField(choices=[('m', 'classic'), ('f', 'female')], default='m', max_length=1)),
                ('terms_accepted', models.BooleanField(validators=[users.models.validate_terms])),
                ('bonus_minutes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(600)])),
                ('bus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='passengers', to='conferences.bus')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='users.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
                ('zosia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='conferences.zosia')),
            ],
            options={
                'verbose_name_plural': 'User preferences',
            },
        ),
        migrations.CreateModel(
            name='UserFilters',
            fields=[
            ],
            options={
                'verbose_name_plural': 'User filters',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
    ]
