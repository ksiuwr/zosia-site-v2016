version: 2.1

jobs:
  run_tests:
    docker:
      - image: python:3.10
      - image: postgres
        environment:
          POSTGRES_DB: "zosia"
          POSTGRES_USER: "zosia"
          POSTGRES_PASSWORD: "zosia"
    steps:
      - checkout
      - run:
          name: Install requirements
          command: |
            pip3 install -r app/requirements.txt
            pip3 install flake8 coverage
      - run:
          name: Run run test with coverage check
          command: cd app/src && coverage run --source='.' --omit='*/migrations/*,zosia16/*,*/tests.py,*/__init__.py'  manage.py test --settings=zosia16.settings.test
      - run:
          name: Run syntax check
          command: flake8 --exclude=migrations --max-line-length=120 app/src || true
      - run:
          name: Show tests coverage report
          command: cd app/src && coverage report -m

  deploy:
    docker:
      - image: node:18-bookworm
    steps:
      - run:
          name: Install gcloud and python-pip
          command: |
            DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y curl apt-transport-https ca-certificates gnupg
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            apt-get update

            DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y python3-pip python3-dev google-cloud-sdk
            echo ${GCLOUD_KEY} | base64 --decode | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GCLOUD_PROJECT}
            gcloud --quiet config set compute/zone europe_central2
      - checkout
      - run:
          name: Build frontend
          command: |
            (cd ./app && yarn install && yarn build)
      - run:
          name: Collect static files
          # we could prepare separate setting files for this without dependencies and with different STATIC_ROOT
          command: |
            python3 -m pip install --break-system-packages -r ./app/requirements.txt
            cd ./app/src && python3 ./manage.py collectstatic --no-input && cp -r /static/. ../static/

      - run:
          name: Push image to App Engine
          command: (cd ./app && gcloud app deploy app.yaml)
      # - run:
      #     name: Purge cache
      #     command: |
      #       curl -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" \
      #         -H "Authorization: Bearer ${CF_CACHE_CLEANER_API_TOKEN}" \
      #         -H "Content-Type: application/json" \
      #         --data '{"purge_everything":true}'

workflows:
  version: 2
  build:
    jobs:
      - run_tests
      - deploy:
          requires:
            - run_tests
          filters:
            branches:
              only:
                # - master
                - zosia_2024
